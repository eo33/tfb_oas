{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#welcome","title":"\ud83d\udc4b Welcome","text":"<p>The Furniture Bros API provides all the tools you need to seamlessly interact with our application and unlock its full functionality. </p> <p>This documentation assumes you have some basics about Rest API. If you are new, you can start from the Get Started page. </p>"},{"location":"#postman","title":"\ud83e\udd16 Postman","text":"<p>The fastest way to start using the API is by using Postman. If you are already familiar with Postman, you can start testing out the endpoints using the Postman collection here:</p> <p></p> <p>Some endpoints are public, some require an API key, and others need admin privileges. Learn more about authentication here.</p>"},{"location":"#quick-start","title":"\ud83c\udfc3 Quick start","text":"<p>You can also interact with the API directly in this site. Here's how to do so:</p> <ol> <li>Obtain Your API Key: Sign in to your account to access your API credentials. You can use the Get an API key endpoint to obtain a key.</li> <li>Explore Endpoints: Dive into the detailed API Reference for all available functionality. </li> <li>Start Building: Use the provided examples to make your first API call.</li> </ol> <p>The API follows REST principles, uses JSON or form-data, and responds with standard HTTP codes. For more information, check out the Making a request page. </p>"},{"location":"#endpoint-categories","title":"\ud83d\udcc1 Endpoint categories","text":"<p>The endpoints are grouped into the following categories for ease of navigation:</p> <ul> <li>Account - Manage user accounts, view profiles, and update account information.</li> <li>Product - View, search, and manage product information.</li> <li>Cart - Add, update, and remove items from the shopping cart. </li> <li>Address - Add, update, and manage shipping addresses.</li> <li>Orders* - Handle order creation, updates, and management. </li> <li>Statistics* - Access insights about users, products, and orders. </li> </ul> <p> *Note: Admin access required. </p> <p>Each of these categories has it's own use cases for your needs. Learn more about them by visiting the Functionalities page. </p> <p>The API docs may include technical terms specific to their functionality (e.g. pagination, API key, content-type). The Glossary page lists these terms and serves as your reference when needed.</p>"},{"location":"#integration-examples","title":"\ud83c\udf3e Integration Examples","text":"<p>If you're familiar with REST API concepts and have your app set up, go to the Examples page for examples of integrating code snippets. Each endpoint in the docs offers code samples in various languages, using either SDKs or built-in libraries\u2014choose what works best for you. You can also use the Postman collection and check the code snippets tab for auto-generated code in different languages.</p> <p>Need help? Visit our Support Center or contact us at support@furniturebros.com. Also visit our release notes to view our latest updates!</p> <p>Let\u2019s get started! \ud83d\ude80 Click here to get your API key and start using the API!</p>"},{"location":"endpoints/Accounts/","title":"Account","text":"<p>The account endpoints allow you to register an account, get an API key, validate your key, get users' details, and edit a user's details.</p> <p></p>"},{"location":"endpoints/Address/","title":"Address","text":"<p>The address endpoints allow you to add, modify, select and delete an address. You can view the list of addresses that you have.</p> <p></p>"},{"location":"endpoints/Cart/","title":"Cart","text":"<p>The cart endpoints allow you to add items in your cart and look at what you currently have in there. You can also modify the number of items and remove items in the cart.</p> <p></p>"},{"location":"endpoints/Orders/","title":"Orders","text":"<p>The orders endpoints allow you to view your current orders. You can also add, modify and delete your orders with these endpoints.</p> <p></p>"},{"location":"endpoints/Product/","title":"Product","text":"<p>The product endpoints allow you to get the list of products available and the details. You can also get the picture of the product. If your account has administrative rights, you can modify and delete a product.</p> <p></p>"},{"location":"endpoints/Statistics/","title":"Statistics","text":"<p>The statistics endpoints allow you to get the statistics of the users, products and orders. These metrics give you insights to the number of users, the most ordered items, and the status of the orders.</p> <p></p>"},{"location":"start/authentication/","title":"Authentication","text":"<p>The Furniture Bros API uses an API key, sometimes referred to as an API Token, for authentication. The API key allows you to access protected endpoints and interact with the endpoints securely. Below is a guide on how to authenticate your requests.</p>"},{"location":"start/authentication/#api-key","title":"\ud83d\udd11 API Key","text":"<p>To authenticate with The Furniture Bros API, you need to include an API key in your requests. This key is provided when you sign up and can be used to access the endpoints.</p>"},{"location":"start/authentication/#how-to-include-the-api-key","title":"How to Include the API Key","text":"<p>You can pass the API key in the request headers as follows:</p> <ul> <li><code>Authorization</code>:<code>&lt;API_TOKEN&gt;</code></li> </ul> <p>Where <code>&lt;API_TOKEN&gt;</code> is your unique API key provided by The Furniture Bros. Use the Get an API key endpoint to get an API key. </p>"},{"location":"start/authentication/#user-types","title":"\ud83d\udc64 User Types","text":"<p>There are two types of users within The Furniture Bros API:</p> <ul> <li>Regular Users: These users can access basic endpoints that do not require administrative privileges.</li> <li>Admin Users: Admin users have additional permissions and can access endpoints that require higher privileges.</li> </ul>"},{"location":"start/authentication/#access-to-endpoints","title":"\ud83e\udeaa Access to Endpoints","text":"<p>There are 3 levels of access (Authorization) to the endpoints:</p> <ul> <li>Endpoints Requiring Admin Access: Some endpoints are restricted to admin users only. These endpoints will return an error if a regular user attempts to access them. Note that some endpoints can't be accessed if you are an admin. </li> <li>Endpoints Requiring Regular User Access: Some endpoints require an authenticated regular user, and requests without an API key or with an invalid key will be rejected.</li> <li>Public Endpoints: Certain endpoints do not require any authentication. These endpoints are publicly accessible without the need for an API key.</li> </ul> <p>Your API key contains the information on what type of access you have. To change your level of access, you can modify your account <code>admin</code> status using the Edit User Details endpoint. </p>"},{"location":"start/authentication/#examples-of-authentication","title":"\ud83d\udd10 Examples of Authentication","text":""},{"location":"start/authentication/#example-1-admin-user-request","title":"Example 1: Admin User Request","text":"<p>For an endpoint that requires admin access, include the API key in the header as shown below:</p> <pre><code>curl --location 'http://thefurniturebros.com/users/edit' \\\n--header 'Authorization: &lt;API_TOKEN&gt;' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"userId\": \"674605a2a18c2f38f2148601\",\n    \"newName\": \"Jane Doe2\",\n    \"newEmail\": \"jane_example@gmail.com\",\n    \"newAdminStatus\": \"true\"\n}'\n</code></pre>"},{"location":"start/authentication/#example-2-regular-user-request","title":"Example 2: Regular User Request","text":"<p>For an endpoint that requires a regular user to be authenticated, the request would look like this:</p> <pre><code>curl --location 'http://thefurniturebros.com/cart/add' \\\n--header 'Authorization: &lt;API_TOKEN&gt;' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"productId\": \"655fefee60b5a0bcc0a9313c\",\n    \"quantity\":25\n}'\n</code></pre>"},{"location":"start/authentication/#example-3-public-endpoint-request","title":"Example 3: Public Endpoint Request","text":"<p>For a public endpoint that does not require authentication, simply omit the <code>Authorization</code> header:</p> <pre><code>curl --location 'http://thefurniturebros.com/products'\n</code></pre>"},{"location":"start/authentication/#error-handling","title":"\ud83d\udd10 Error Handling","text":"<p>If the API key is missing, invalid, or does not have the appropriate permissions, the server will respond with an error message, such as:</p> <pre><code>{\n    \"message\": \"Forbidden\"\n}\n</code></pre> <p>For endpoints requiring admin access, regular users will receive a <code>403 Forbidden</code> error:</p> <pre><code>{\n    \"msg\": \"unauthorized user, you are not an administrator\"\n}\n</code></pre>"},{"location":"start/authentication/#regenerating-api-keys","title":"\ud83d\udda8\ufe0f Regenerating API Keys","text":"<p>Each key is valid for 36,000 seconds (10 hours). Once it expires, you'll need to request a new one.If you need to regenerate or revoke your API key, please use the Get an API key endpoint to get a new API key.  </p>"},{"location":"start/examples/","title":"Examples","text":"<p>This section provides an example of an API request in different programming languages to help you quickly integrate The Furniture Bros API into your application. In the API docs section, each endpoint includes code snippets in various languages for easy copy-pasting. For this example, we will be using this endpoint:</p> <p><code>POST /auth/register</code> - This endpoint allows you to create and register an account. </p>"},{"location":"start/examples/#curl","title":"cURL","text":"<pre><code>curl --location 'http://thefurniturebros.com/auth/register' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"name\": \"John Dane\",\n    \"email\":\"jon_dane@gmail.com\",\n    \"password\":\"123456\",\n    \"admin\": false\n}'\n</code></pre>"},{"location":"start/examples/#javascript","title":"JavaScript","text":"<pre><code>const myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"name\": \"John Dane\",\n  \"email\": \"jon_dane@gmail.com\",\n  \"password\": \"123456\",\n  \"admin\": false\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"http://thefurniturebros.com/auth/register\", requestOptions)\n  .then((response) =&gt; response.text())\n  .then((result) =&gt; console.log(result))\n  .catch((error) =&gt; console.error(error));\n</code></pre>"},{"location":"start/examples/#python","title":"Python","text":"<pre><code>import http.client\nimport json\n\nconn = http.client.HTTPConnection(\"thefurniturebros.com\")\npayload = json.dumps({\n  \"name\": \"John Dane\",\n  \"email\": \"jon_dane@gmail.com\",\n  \"password\": \"123456\",\n  \"admin\": False\n})\nheaders = {\n  'Content-Type': 'application/json'\n}\nconn.request(\"POST\", \"/auth/register\", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode(\"utf-8\"))\n</code></pre>"},{"location":"start/examples/#java","title":"Java","text":"<pre><code>OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n    \\\"name\\\": \\\"John Dane\\\",\\r\\n    \\\"email\\\":\\\"jon_dane@gmail.com\\\",\\r\\n    \\\"password\\\":\\\"123456\\\",\\r\\n    \\\"admin\\\": false\\r\\n}\");\nRequest request = new Request.Builder()\n  .url(\"http://thefurniturebros.com/auth/register\")\n  .method(\"POST\", body)\n  .addHeader(\"Content-Type\", \"application/json\")\n  .build();\nResponse response = client.newCall(request).execute();\n</code></pre>"},{"location":"start/functionalities/","title":"Functionalities","text":"<p>The Furniture Bros API provides a range of functionalities, grouped into endpoint categories for ease of navigation. Whether you're managing inventory, analyzing customer behavior, or optimizing the checkout flow, our API offers the tools to solve these challenges efficiently.</p>"},{"location":"start/functionalities/#account","title":"\ud83d\uddc2\ufe0f Account","text":"<p>Use Case: Easily manage user accounts and profiles to provide personalized experiences.\\ The account management endpoints allow you to:</p> <ul> <li>Create and manage user profiles: Streamline onboarding with user registration and authentication features.</li> <li>Maintain user data: Update and retrieve customer profiles, ensuring accurate customer information.</li> <li>Track login and authentication: Secure login processes with API key-based authentication to enhance user experience and protect sensitive data.</li> </ul> <p>How It Solves Your Problem:\\ Product managers can quickly onboard new users, while tech leaders can ensure secure user management and authentication, improving both operational efficiency and customer satisfaction.</p>"},{"location":"start/functionalities/#product","title":"\ud83e\ude79 Product","text":"<p>Use Case: Manage your product catalog effortlessly with robust endpoints for viewing, updating, and adding new products.\\ The product endpoints enable you to:</p> <ul> <li>View and search products: Fetch a complete list of products or specific product details to keep your catalog up-to-date.</li> <li>Add new products and update listings: Streamline product management workflows, from adding new items to updating existing product details in real time.</li> <li>Remove outdated products: Quickly delete products no longer in the catalog, maintaining a clean, accurate inventory.</li> </ul> <p>How It Solves Your Problem:\\ Tech teams can easily integrate product data into their applications, while product managers can ensure that the catalog reflects the latest products, prices, and availability, resulting in a more dynamic and responsive platform.</p>"},{"location":"start/functionalities/#cart","title":"\ud83d\uded2 Cart","text":"<p>Use Case: Manage the shopping cart experience to optimize checkout and increase conversion rates.\\ With the cart endpoints, you can:</p> <ul> <li>Add, update, and remove items: Provide users with the ability to modify their cart in real time, encouraging a smoother shopping experience.</li> <li>View cart contents: Track cart data for personalized recommendations or retargeting campaigns.</li> </ul> <p>How It Solves Your Problem:\\ Product managers can optimize the cart flow to boost sales, while tech leaders can ensure seamless cart management integration with the front-end application, minimizing friction during the purchase process and reducing cart abandonment.</p>"},{"location":"start/functionalities/#address","title":"\ud83d\udccd Address","text":"<p>Use Case: Manage shipping addresses for a streamlined fulfillment process.\\ The address endpoints allow you to:</p> <ul> <li>Add new addresses: Enable users to store and manage multiple shipping addresses, making repeat purchases quicker and easier.</li> <li>Update and remove addresses: Ensure that users\u2019 shipping information is always up-to-date and relevant.</li> </ul> <p>How It Solves Your Problem:\\ Product managers can improve the user experience by simplifying the checkout process, while tech leaders can ensure smooth address validation and management throughout the purchasing lifecycle.</p>"},{"location":"start/functionalities/#order","title":"\ud83d\udd00 Order","text":"<p>Use Case: Handle the entire order lifecycle, from creation to completion.\\ With the order endpoints, you can:</p> <ul> <li>Create and manage orders: Seamlessly create orders from cart data and manage order status.</li> <li>Update order details: Make real-time adjustments to order status, enabling better customer service and operational flexibility.</li> <li>Track order history: Retrieve detailed information on past orders for customer support or analytics.</li> </ul> <p>How It Solves Your Problem:\\ Product managers can gain visibility into order processing and optimize the post-purchase experience, while tech leaders can integrate order management into fulfillment systems to ensure efficient order handling, reducing delays and errors.</p>"},{"location":"start/functionalities/#statistics","title":"\ud83d\udcc8 Statistics","text":"<p>Use Case: Access valuable insights to inform business decisions and optimize performance.\\ The statistics endpoints provide insights into:</p> <ul> <li>User behavior: Track user activity and identify trends to inform product offerings and marketing campaigns.</li> <li>Product performance: Analyze sales, product views, and popularity to fine-tune inventory management and promotional strategies.</li> <li>Order trends: Get insights on order volume, trends, and patterns to optimize supply chain and fulfillment processes.</li> </ul> <p>How It Solves Your Problem:\\ Product managers can leverage these insights to make data-driven decisions on product offerings, while tech leaders can utilize the data to optimize platform performance, ensuring scalability and improved business outcomes.</p> <p>The Furniture Bros API is a comprehensive toolset designed to address the following challenges faced by product managers and tech leaders:</p> <ul> <li>Streamlining workflows: Our API helps automate and streamline product catalog management, user account handling, cart management, and order processing.</li> <li>Optimizing customer experiences: With smooth cart, order, and profile management, the API ensures a frictionless experience for end-users, increasing conversion rates and reducing churn.</li> <li>Data-driven decision-making: Access powerful insights on user behavior, product performance, and order trends to refine marketing, sales, and inventory strategies.</li> <li>Scalability and flexibility: The API is designed for easy integration with other systems, ensuring it can scale with your business and adapt to new needs as your product offerings evolve.</li> </ul>"},{"location":"start/get-started/","title":"Get Started","text":"<p>API (Application Programming Interface) allows applications to communicate with each other. Postman is a powerful tool for interacting with APIs, making it easy to test The Furniture Bros API. This guide will walk you through the basics of using Postman to get started with APIs. </p>"},{"location":"start/get-started/#getting-started-with-postman","title":"\ud83d\udda5\ufe0f Getting Started with Postman","text":"<p>Install Postman</p> <ol> <li>Visit Postman's website.</li> <li>Download and install the Postman app for your operating system.</li> <li>Launch Postman and create an account if required.</li> </ol>"},{"location":"start/get-started/#import-the-postman-collection","title":"Import the Postman Collection","text":"<ol> <li>Download The Furniture Bros Postman collection using the \"Run in Postman\" button below:</li> </ol> <ol> <li>Click the \"Import collection\" link. </li> </ol> <p>Understand the Collection Structure</p> <ul> <li>Each collection consists of requests grouped into different categories.</li> <li>Click on a request to view:</li> <li>URL: The API endpoint.</li> <li>Method: GET, POST, PUT, DELETE, etc.</li> <li>Headers: Metadata required by the API.</li> <li>Body (if applicable): Data to send with POST or PUT requests.</li> </ul> <p>Learn more about the structure of a REST API by visiting the making a request page.</p>"},{"location":"start/get-started/#make-your-first-request","title":"Make Your First Request","text":"<ol> <li>Open the collection and select a request. For example, you can use the <code>POST http://thefurniturebros.com/auth/register</code>. This request is located under the Account category. </li> <li>Fill out the \"Body\" tab with your account <code>name</code>, <code>email</code> and <code>password</code>.</li> <li>Click \"Send\" to execute the request.</li> <li>Review the response in the bottom panel:</li> <li>Status Code: Confirms request success (e.g., 200 OK).</li> <li>Body: Displays response data from the API.</li> <li>If your request is successful, you will receive an API Key. This key acts like a password; it verifies your identify when making a request. Some endpoints require request to be made with an API Key, while some don't. Learn more about authentication.</li> </ol>"},{"location":"start/get-started/#next-steps","title":"\ud83e\uddb6 Next Steps","text":"<ul> <li>Explore the API\u2019s full capabilities by running all the requests in the collection.</li> <li>Share the collection with your team using Postman\u2019s sharing options.</li> <li>Start integrating The Furniture Bros API into your application. </li> </ul> <p>By following this guide, you'll be able to use the provided Postman collection to interact with the API effectively.</p>"},{"location":"start/making-a-request/","title":"Making a request","text":"<p>This guide explains the basics of making REST API requests to The Furniture Bros API. It covers essential elements such as HTTP methods, paths, headers, authentication, parameters, pagination, and error handling.</p>"},{"location":"start/making-a-request/#http-method","title":"HTTP method","text":"<p>The FurnitureBros API supports standard HTTP methods:</p> <ul> <li>GET: Retrieve data.</li> <li>POST: Submit data to create or modify resources.</li> <li>PUT: Update existing resources.</li> <li>DELETE: Remove resources.</li> </ul>"},{"location":"start/making-a-request/#path","title":"Path","text":"<p>API endpoints follow this structure:</p> <pre><code>http://thefurniturebros.com/{endpoint}\n</code></pre> <p>For example:</p> <ul> <li>GET /products: Get Product List</li> <li>POST /products/upload: Upload a Product.</li> </ul>"},{"location":"start/making-a-request/#headers","title":"Headers","text":"<p>Requests should include the following headers:</p> <ul> <li>Authentication Header: For endpoints requiring authentication.</li> </ul> <pre><code>Authorization: &lt;API_TOKEN&gt;\n  </code></pre> <ul> <li>Content-Type Header: Specify the format of the request payload.</li> </ul> <p><code>Content-Type: application/json</code></p> <p>For endpoints that require authentication, include your API key in the <code>Authorization</code> header. Public endpoints do not require an API key. Learn more here.</p>"},{"location":"start/making-a-request/#content-type","title":"Content type","text":"<p>Two content types are supported based on the nature of the request:</p> <ul> <li>application/json: Used for most requests with JSON-formatted data.</li> <li>multipart/form-data: Required for file uploads, such as uploading a product image.</li> </ul> <p>Specify the appropriate <code>Content-Type</code> in the header when making a request.</p>"},{"location":"start/making-a-request/#parameters","title":"Parameters","text":""},{"location":"start/making-a-request/#path-parameters","title":"Path parameters","text":"<p>Path parameters specify the resource or action in the URL. Examples:</p> <ul> <li>GET /prdocuts/{filename}: Fetch the image of the product.</li> <li>GET /stats/productTable/{page}: Fetch the information of the products.</li> </ul>"},{"location":"start/making-a-request/#body-parameters","title":"Body parameters","text":"<p>Most endpoints require a JSON body in the request. Example:</p> <p>POST /auth/register</p> <pre><code>{\n    \"name\": \"John Dane\",\n    \"email\":\"jon_dane@gmail.com\",\n    \"password\":\"123456\"\n}\n</code></pre>"},{"location":"start/making-a-request/#query-parameters","title":"Query parameters","text":"<p>The Furniture Bros API currently does not use query parameters.</p>"},{"location":"start/making-a-request/#pagination","title":"Pagination","text":"<p>Some endpoints support pagination. Pagination details are specified in the path parameter, like:</p> <ul> <li><code>GET /stats/productTable/{page}</code></li> <li><code>GET /stats/order/all/{page}</code></li> <li><code>GET /users/get_all/{page}</code></li> </ul> <p>Example:</p> <pre><code>GET http://thefurniturebros.com/stats/productTable/2\n</code></pre>"},{"location":"start/making-a-request/#errors","title":"Errors","text":"<p>The API uses standard HTTP response codes to indicate success or failure:</p> Response codeDescription200OK. Request was successful.400Bad Request. The request is invalid or malformed.401Unauthorized. Missing or invalid API key.403Forbidden. You do not have permission to access the resource.500Internal Server Error. An unexpected server error occurred."},{"location":"start/making-a-request/#api-status-limitations","title":"API Status &amp; limitations","text":"<p>The API currently supports the following features and limitations:</p> <ul> <li>CORS Support: The Furniture Bros API allows requests from any device or origin, enabling seamless cross-origin resource sharing (CORS). You can integrate the API into web, mobile, or server-side applications without restrictions.</li> <li>No Rate Limits: There are no rate limits, so you can make as many requests as needed without encountering a <code>429 Too Many Requests</code> error.</li> </ul> <p>For further assistance, refer to the specific endpoint documentation or contact support.</p>"},{"location":"start/glossary/","title":"Glossary","text":"<p>Welcome to the Glossary page, where you can find clear and concise definitions of key terms used in our platform. Whether you're a developer, administrator, or regular user, understanding these terms will help you navigate the features and functionalities of our system with ease.</p> <p>This glossary covers terminology related to user roles, authentication, data management, and API usage, offering quick references to ensure you're well-equipped to work with our application. From admin-specific terms to unique identifiers like User ID and Product ID, this page is a helpful resource for understanding how our platform operates.</p>"},{"location":"start/glossary/api-terms/","title":"API terms","text":"<p>Below is a glossary explaining common terms related to API usage, HTTP protocols, and the tools that facilitate API interaction.</p> TermDescriptionAPI KeyA unique identifier used to authenticate requests to an API. It serves as a security measure to ensure that the requester is authorized to access the API. This term is also known as API Token, authorization token, or simply token. AuthenticationThe process of verifying the identity of a user or system making a request to ensure they are who they claim to be.AuthorizationThe process of determining whether the authenticated user has the necessary permissions to access a resource or perform an action.Code SnippetsPre-written segments of code that demonstrate how to make requests to an API in different programming languages, making integration easier for developers.Content TypeThe type of data being sent or received, such as JSON (application/json) or XML (application/xml). It helps the server understand how to process the data.CORSA security feature implemented by browsers to restrict web pages from making requests to domains other than the one that served the web page.cURLA command-line tool used to send HTTP requests. It\u2019s often used for testing APIs, particularly to retrieve data or perform operations directly from the terminal.EndpointA specific URL path where an API can be accessed. It represents a function or resource available via the API.HTTP MethodThe action to be performed on a resource via an HTTP request. Common methods include GET (retrieve), POST (create), PUT (update), DELETE (delete).PaginationA method used to divide large sets of data into pages. This allows users to view manageable portions of data, such as the first 10 or 20 items per page.ParametersData sent in the request to provide additional context or information to the API. Parameters can be in the URL, body, or header of the request.PathThe part of the URL that specifies the resource or action to be performed. For example, in api.example.com/users, /users is the path.PostmanA popular tool used to test APIs. It provides a user-friendly interface for sending requests, viewing responses, and organizing API documentation.Postman CollectionA group of related API requests that can be executed together, often used to document and share API workflows and testing procedures.QueryA specific type of parameter that appears in the URL after a question mark (?), typically used for filtering or sorting data. Example: ?category=books.Rate LimitsRestrictions on how many requests can be made to an API in a given period of time, intended to prevent abuse and ensure fair use of resources.RequestA message sent from the client to the server asking for some action, such as retrieving data or performing an operation.ResponseThe message sent by the server in reply to a request, which typically contains the requested data or a status message about the action performed."},{"location":"start/glossary/functionality-terms/","title":"Functionality terms","text":"<p>Below is a glossary explaining common terms related to user roles, identifiers, and system functionality used in the context of an e-commerce platform or web application.</p> TermDescriptionTokenA security credential used to authenticate a user or service. It often refers to an access token or authentication token issued after a successful login.AuthenticatedRefers to the process of verifying a user's identity, typically by checking the provided credentials (like a username and password), to grant access to protected resources.Admin UsersUsers with administrative privileges who can manage and configure the system, including managing users, orders, and products.Regular UsersStandard users who have access to the platform for browsing, purchasing products, and managing their own account, but without administrative privileges.Google Places KeyAn API key used to authenticate requests to the Google Places API, allowing the app to fetch location data such as addresses, business names, and details.FilenameThe name assigned to a file, often including its extension (e.g., image.jpg). It is used to reference and manage files within the system or application.User IDA unique identifier assigned to each user in the system. It helps differentiate between users and allows for personalized access to account features.Address IDA unique identifier for an address in the system, typically used to distinguish between multiple addresses that a user may have stored or used for shipping.Order IDA unique identifier assigned to each order placed by a customer, used to track and manage the status, contents, and history of the order."},{"location":"start/release-notes/","title":"Release Notes","text":"<p>The release notes provide essential information regarding updates, new features, bug fixes, and other changes to the API. This document serves as a guide for developers and users to understand the enhancements and improvements in each release.</p>"},{"location":"start/release-notes/05-oct-2023/","title":"05 Oct 2023","text":"<p>This release introduces essential user authentication and session management features for the e-commerce application. It enables users to sign up, securely log in, and maintain a persistent session across pages, while also allowing guest users to browse without creating an account. Key features include:</p> <ul> <li>User Sign-Up &amp; Login: New and registered users can now securely create and access their accounts.</li> <li>Authentication Flow: JSON Web Tokens (JWT) are used for secure authentication, ensuring users remain logged in during their session.</li> <li>Protected Routes: Certain features like adding items to the cart and placing orders are restricted to authenticated users.</li> <li>Guest User Access: Non-registered users can browse the app without the need for an account.</li> </ul>"},{"location":"start/release-notes/14-nov-2023/","title":"14 Nov 2023","text":"<p>This release introduces a fully functional shopping cart, allowing customers to add, modify, and remove items with ease while keeping track of their selections and prices. Key features include:</p> <ul> <li>Add Products to Cart: Customers can add products to their shopping cart while browsing, allowing them to keep track of their desired items as they shop.</li> <li>Cart Summary: A concise, user-friendly summary of the cart displays item quantities, individual prices, and the total cost, including taxes or fees, providing customers with a clear overview before checkout.</li> <li>Modify &amp; Remove Items: Users can easily adjust item quantities or remove products from the cart, giving them flexibility in managing their selections.</li> <li>Persistent Cart: The cart remains accessible and persists across different pages during the user\u2019s session, so customers can continue shopping without losing their selections.</li> <li>Dynamic Updates: The shopping cart interface updates in real time as users add, remove, or modify items, providing immediate feedback without requiring a page refresh.</li> </ul>"},{"location":"start/release-notes/20-nov-2023/","title":"20 Nov 2023","text":"<p>This release introduces a streamlined and comprehensive checkout process, enhancing the customer experience by guiding them through essential steps while ensuring all relevant details are clearly displayed. Key features include:</p> <ul> <li>Guided Checkout Process: A user-friendly interface that walks customers through providing their shipping and payment information, simplifying the purchase process.</li> <li>Multiple Saved Addresses: Customers can save multiple addresses for future use, making it easy to select a shipping address during checkout.</li> <li>Shipping Method Selection: For each item, customers can choose the preferred shipping method, providing flexibility based on the type of item and their preferences.</li> <li>Order Summary: A detailed breakdown of costs is provided, including item prices, taxes, shipping fees, and the total amount due, ensuring transparency before finalizing the purchase.</li> <li>Order Confirmation: Customers are able to see confirmation that their orders have been successfully processed.</li> </ul>"},{"location":"start/release-notes/23-oct-2023/","title":"23 oct 2023","text":"<p>This release introduces essential user authentication and session management features for the e-commerce application. It enables users to sign up, securely log in, and maintain a persistent session across pages, while also allowing guest users to browse without creating an account. Key features include:</p> <ul> <li>User Sign-Up &amp; Login: New and registered users can now securely create and access their accounts.</li> <li>Authentication Flow: JSON Web Tokens (JWT) are used for secure authentication, ensuring users remain logged in during their session.</li> <li>Protected Routes: Certain features like adding items to the cart and placing orders are restricted to authenticated users.</li> <li>Guest User Access: Non-registered users can browse the app without the need for an account.</li> </ul>"},{"location":"start/release-notes/24-nov-2023/","title":"24 Nov 2023","text":"<p>This release introduces an order status feature, allowing customers to track the progress of their purchases and view essential details about each order. Key features include:</p> <ul> <li>Thank You Page: After a successful purchase, customers are shown a thank you page, confirming that their order has been processed.</li> <li>Order Status Page: Customers can easily access their order status page to view the current status of their orders, including stages like \"pending,\" \"shipping,\" or \"arrived.\"</li> <li>Order Tracking: A user-friendly interface that provides clear visibility into the status of each order, helping customers stay informed about the progress of their purchases.</li> <li>Pagination: The order history is paginated to improve performance and make navigation more manageable, allowing customers to view a limited number of orders per page.</li> </ul>"},{"location":"start/release-notes/26-oct-2023/","title":"26 Oct 2023","text":"<p>This release introduces individual product pages that provide customers with in-depth information about each item, enhancing their shopping experience. Customers can now access a dedicated page for each product, which includes a gallery of images, detailed descriptions, and specifications. Key features include:</p> <ul> <li>Product Detail Page: Each product now has a dedicated page displaying a comprehensive description, specifications, and multiple product images, allowing customers to view the item from different angles.</li> <li>Image Gallery &amp; Zoom: Users can browse through a gallery of images and use a zoom feature to closely inspect product details.</li> <li>Navigation &amp; Performance: The page includes smooth navigation between product details and listings, ensuring customers can easily return to browse more items. The page is optimized for fast loading, even with large images.</li> <li>Responsive Design: The product details page is fully responsive, ensuring a seamless experience across various devices, including mobile phones and tablets.</li> <li>Admin Management: Administrators have the ability to manage and update product details, including images and descriptions, via a secure admin panel.</li> <li>Efficient Data Retrieval: Backend optimizations and caching ensure that product details are retrieved quickly, improving load times for customers.</li> </ul>"},{"location":"start/release-notes/30-nov-2023/","title":"30 Nov 2023","text":"<p>This release introduces a comprehensive admin panel, providing administrators with powerful tools to manage products, orders, and users on the e-commerce platform. Key features include:</p> <ul> <li>Secure Login System: Administrators can securely log in to the admin panel to access and manage various aspects of the platform.</li> <li>Intuitive User Interface: The admin panel features an easy-to-use design, focusing on efficient navigation and management of products, orders, and users. A sidebar has been added to facilitate smooth navigation through different sections.</li> <li>Product Management: Administrators can easily add new products, update existing product details, and manage inventory through a user-friendly interface.</li> <li>Order Management: The admin panel includes an order management system, allowing administrators to track and update order statuses, process orders, and handle related customer inquiries.</li> <li>User Management: Administrators have the ability to view and manage user accounts, including modifying profiles and addressing account-related issues.</li> <li>Pagination: To ensure smooth handling of large datasets, pagination has been implemented in both the product and user management sections.</li> </ul>"},{"location":"start/release-notes/4-dec-2023/","title":"4 Dec 2023","text":"<p>This release introduces the landing page, deployment of the app to a live environment, and completing the necessary documentation. Key features include:</p> <ul> <li>Landing Page: A visually appealing and functional landing page has been created, with a feature to request random product data through a fetch API call, enhancing the user experience right from the start.</li> <li>Web App Deployment: The web app has been successfully deployed to Heroku, ensuring that users can access the platform from anywhere via the web.</li> <li>Documentation Completion: The remaining documentation has been finalized, providing developers and users with comprehensive details on how the app is structured and built.</li> </ul>"},{"location":"start/release-notes/5-dec-2024/","title":"5 Dec 2024","text":"<p>This release focuses on enhancing the documentation for the Furniture Bros API to provide users and developers with comprehensive, accessible, and up-to-date resources. The main components include:</p> <ol> <li>GitBook Setup: A GitBook instance has been set up to host and structure the documentation, including pages on authentication, pagination, errors, release notes, and API endpoints.</li> <li>OpenAPI Specification (OAS) Repository: A dedicated repository for the OAS 3.0 file has been created, enabling version control and easier management of API specifications, which ensures that developers can modify and track changes over time.</li> <li>Postman Collection Integration: The Postman collection has been added to GitBook, allowing users to easily download and test the API endpoints. This makes it easier for developers to interact with the API, test different requests, and get familiar with the system.</li> <li>Secondary Content Creation: The documentation has been enriched with secondary content to help users get started, including explanations of REST APIs, request examples, and a glossary. This content also covers the latest updates to the API, ensuring users stay informed.</li> </ol> <p>This enhancement ensures that the documentation is thorough, up-to-date, and user-friendly, offering all the necessary tools to interact with and understand the Furniture Bros API.</p>"}]}